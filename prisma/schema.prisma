generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cars {
  id                Int         @id @default(autoincrement())
  image_url         String      @db.VarChar(255)
  car_body_type     String      @db.VarChar(50)
  price_per_day     Int
  engine_capacity   String?     @db.VarChar(10)
  fuel_type         String      @db.VarChar(50)
  seats_quantity    Int
  deposit           Int
  year              String      @db.VarChar(4)
  transmission_type String      @db.VarChar(50)
  brand             String      @db.VarChar(100)
  model             String      @db.VarChar(100)
  contracts         contracts[]
  reviews           reviews[]
}

model clients {
  id              Int         @id @default(autoincrement())
  first_name      String      @db.VarChar(50)
  last_name       String      @db.VarChar(50)
  passport_number String?     @db.VarChar(20)
  phone_1         String      @db.VarChar(20)
  phone_2         String?     @db.VarChar(20)
  status          String      @db.VarChar(10)
  location_id     Int?
  hotel_name      String?     @db.VarChar(100)
  locations       locations?  @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  contracts       contracts[]
}

model contracts {
  id                                                 Int        @id @default(autoincrement())
  client_id                                          Int?
  car_id                                             Int?
  is_clean                                           Boolean?   @default(true)
  rental_amount                                      Decimal    @db.Decimal(10, 2)
  rental_currency                                    String?    @default("USD") @db.VarChar(3)
  deposit_amount                                     Decimal    @db.Decimal(10, 2)
  deposit_currency                                   String     @db.VarChar(3)
  pickup_location_id                                 Int?
  address_return                                     String     @db.VarChar(255)
  amount                                             Decimal    @db.Decimal(10, 2)
  baby_chair                                         Boolean    @default(false)
  client_name                                        String     @db.VarChar(100)
  client_passport_number                             String     @db.VarChar(50)
  client_phone_number                                String     @db.VarChar(20)
  client_second_phone_number                         String?    @db.VarChar(20)
  client_surname                                     String     @db.VarChar(100)
  date_end                                           DateTime
  date_start                                         DateTime
  dropoff_address                                    String     @db.VarChar(255)
  dropoff_location_id                                Int?
  fuel                                               String     @db.VarChar(50)
  full_insurance                                     Boolean    @default(false)
  location_return                                    String     @db.VarChar(255)
  manager                                            String     @db.VarChar(100)
  mileage_odo                                        Int
  pickup_address                                     String     @db.VarChar(255)
  rental_deposit_amount                              Decimal    @db.Decimal(10, 2)
  rental_deposit_currency                            String?    @default("USD") @db.VarChar(3)
  time_return                                        DateTime?
  car_brand                                          String     @db.VarChar(100)
  car_model                                          String     @db.VarChar(100)
  cars                                               cars?      @relation(fields: [car_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  clients                                            clients?   @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  locations_contracts_dropoff_location_idTolocations locations? @relation("contracts_dropoff_location_idTolocations", fields: [dropoff_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  locations_contracts_pickup_location_idTolocations  locations? @relation("contracts_pickup_location_idTolocations", fields: [pickup_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments                                           payments[]
}

model locations {
  id                                                 Int         @id @default(autoincrement())
  hotel_name                                         String      @db.VarChar(100)
  google_maps_link                                   String      @db.VarChar(255)
  clients                                            clients[]
  contracts_contracts_dropoff_location_idTolocations contracts[] @relation("contracts_dropoff_location_idTolocations")
  contracts_contracts_pickup_location_idTolocations  contracts[] @relation("contracts_pickup_location_idTolocations")
}

model payments {
  id           Int        @id @default(autoincrement())
  contract_id  Int?
  payment_type String     @db.VarChar(50)
  amount       Decimal    @db.Decimal(10, 2)
  currency     String?    @default("USD") @db.VarChar(3)
  created_at   DateTime?  @default(now()) @db.Timestamp(6)
  contracts    contracts? @relation(fields: [contract_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model reviews {
  id         Int       @id @default(autoincrement())
  car_id     Int
  name       String    @db.VarChar(100)
  review     String
  rating     Int?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  cars       cars      @relation(fields: [car_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
